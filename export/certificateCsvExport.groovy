records.each { Certificate c ->
	csv << [
			"studentFirstName"               : c.studentFirstName,
			"studentLastName"                : c.studentLastName,
			"certificateNumber"              : c.certificateNumber,
			"fullQualification"              : c.isQualification,
			"printed"                        : c.printedOn?.format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"modifiedOn"                     : c.modifiedOn?.format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"createdOn"                      : c.createdOn?.format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"revokedOn"                      : c.revokedOn?.format("yyyy-MM-dd"),
			"privateNotes"                   : c.privateNotes,
			"publicNotes"                    : c.publicNotes,
			"studentIsMale"                  : c.student.contact.isMale,
			"studentIsCompany"               : c.student.contact.isCompany,
			"studentCreatedOn"               : c.student.contact.createdOn?.format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"studentModifiedOn"              : c.student.contact.modifiedOn?.format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"studentAllowEmail"              : c.student.contact.allowEmail,
			"studentAllowPost"               : c.student.contact.allowPost,
			"studentAllowSms"                : c.student.contact.allowSms,
			"studentBirthDate"               : c.student.contact.birthDate?.format("yyyy-MM-dd"),
			"studentDeliveryStatusEmail"     : c.student.contact.deliveryStatusEmail,
			"studentDeliveryStatusPost"      : c.student.contact.deliveryStatusPost,
			"studentDeliveryStatusSms"       : c.student.contact.deliveryStatusSms,
			"studentHomePhone"               : c.student.contact.homePhone,
			"studentWorkPhone"               : c.student.contact.workPhone,
			"studentMobilePhone"             : c.student.contact.mobilePhone,
			"studentStreet"                  : c.student.contact.street,
			"studentPostcode"                : c.student.contact.postcode,
			"studentSuburb"                  : c.student.contact.suburb,
			"studentState"                   : c.student.contact.state,
			"studentUniqueCode"              : c.student.contact.uniqueCode,
			"studentIsTutor"                 : c.student.contact.isTutor,
			"studentNotes"                   : c.student.contact.notes,
			"studentEmail"                   : c.student.contact.email,
			"studentFax"                     : c.student.contact.fax,
			"studentMessage"                 : c.student.contact.message,
			"studentTfn"                     : c.student.contact.tfn,
			"studentAbn"                     : c.student.contact.abn,
			"studentNumber"                  : c.student.studentNumber,
			"studentDisabilityType"          : c.student.disabilityType?.displayName,
			"studentEnglishProficiency"      : c.student.englishProficiency?.displayName,
			"studentHighestSchoolLevel"      : c.student.highestSchoolLevel?.displayName,
			"studentIndigenousStatus"        : c.student.indigenousStatus?.displayName,
			"studentIsOverseasClient"        : c.student.isOverseasClient,
			"studentIsStillAtSchool"         : c.student.isStillAtSchool,
			"studentLabourForceStatus"       : c.student.labourForceStatus?.displayName,
			"studentPriorEducation"          : c.student.priorEducationCode?.displayName,
			"studentConcessionNumberObsolete": c.student.concessionNumberObsolete,
			"studentConcessionTypeObsolete"  : c.student.concessionTypeObsolete,
			"studentSpecialNeeds"            : c.student.specialNeeds,
			"studentYearSchoolCompleted"     : c.student.yearSchoolCompleted
	]
}
